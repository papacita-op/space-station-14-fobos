using Content.Shared.Corvax.DiscordAuth;
using Robust.Client.AutoGenerated;
using Robust.Client.Console;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Network;
using Robust.Shared.Utility;

namespace Content.Client.Corvax.DiscordAuth;

[GenerateTypedNameReferences]
public sealed partial class DiscordAuthGui : Control
{
    [Dependency] private readonly DiscordAuthManager _discordAuthManager = default!;
    [Dependency] private readonly IClientConsoleHost _consoleHost = default!;
    [Dependency] private readonly INetManager _netManager = default!;

    private readonly IClipboardManager _clipboard;
    public DiscordAuthGui(IClipboardManager clipboard)
    {
        _clipboard = clipboard;

        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        LayoutContainer.SetAnchorPreset(this, LayoutContainer.LayoutPreset.Wide);

        if (!_discordAuthManager.IsOpt)
        {
            InfoLabel.Text = Loc.GetString("discord-auth-info-notopt");
        }

        if (!_discordAuthManager.IsOpt)
        {
            ByPassBtn.Visible = false;
        }
        else
        {
            ByPassBtn.OnPressed += (_) =>
            {
                _discordAuthManager.ByPass();
            };
        }

        QuitButton.OnPressed += (_) =>
        {
            _consoleHost.ExecuteCommand("quit");
        };

        if (_discordAuthManager.Qrcode != null)
        {
            QrCode.Texture = _discordAuthManager.Qrcode;
        }

        OpenUrlButton.OnPressed += (_) =>
        {
            if (!string.IsNullOrEmpty(_discordAuthManager.AuthUrl))
            {
                IoCManager.Resolve<IUriOpener>().OpenUri(_discordAuthManager.AuthUrl);
            }
        };

        CopyLinkButton.OnPressed += (_) =>
        {
            if (!string.IsNullOrEmpty(_discordAuthManager.AuthUrl))
            {
                _clipboard.SetText(_discordAuthManager.AuthUrl);
            }
        };
    }
}